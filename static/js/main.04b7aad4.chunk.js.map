{"version":3,"sources":["logo.svg","data/UserKit.js","pages/LoginPage.jsx","components/PrivateRouter.jsx","pages/PrivatePage.jsx","pages/NotFound.jsx","App.js","reportWebVitals.js","index.js"],"names":["ROOT_URL","API_URL","LOGIN_URL","email","password","payload","fetch","method","body","JSON","stringify","headers","this","getPublicHeaders","url","getPrivateHeaders","getToken","token","localStorage","setItem","getItem","removeItem","LoginPage","useState","emailInput","setEmailInput","passwordInput","setPasswordInput","setToken","userKit","UserKit","type","value","onChange","e","target","placeholder","onClick","login","then","res","json","data","PrivateRouter","Component","component","rest","render","props","to","PrivatePage","NotFound","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"iMAAe,I,qBCATA,EAAW,iCACXC,EAAO,UAAMD,EAAN,WAEPE,GADQ,UAAMF,EAAN,SACC,UAAMA,EAAN,oB,gGAIPG,EAAOC,GACX,IAAMC,EAAU,CACdF,QAAOC,YAET,OAAOE,MAAMJ,EAAW,CACtBK,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAASC,KAAKC,uB,8BAKhB,IAAMC,EAAG,UAAMb,EAAN,MACT,OAAOK,MAAMQ,EAAK,CAChBH,QAASC,KAAKG,wB,wCAKhB,IAAMD,EAAG,UAAMb,EAAN,aACT,OAAOK,MAAMQ,EAAK,CAChBH,QAASC,KAAKG,wB,yCAKhB,MAAO,CACL,eAAgB,sB,0CAKlB,MAAO,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BH,KAAKI,e,+BAI3BC,GACPC,aAAaC,QAAQ,UAAWF,K,iCAIhC,OAAOC,aAAaE,QAAQ,a,oCAI5BF,aAAaG,WAAW,e,2BCnDb,SAASC,IAAa,IAAD,EACEC,mBAAS,0BADX,mBAC3BC,EAD2B,KACfC,EADe,OAEQF,mBAAS,sBAFjB,mBAE3BG,EAF2B,KAEZC,EAFY,OAGRJ,mBAAS,MAHD,mBAGpBK,GAHoB,WAK5BC,EAAU,IAAIC,EAapB,OACE,gCACE,qCACA,uBACEC,KAAK,OACLC,MAAOR,EACPS,SAAU,SAAAC,GAAC,OAAIT,EAAcS,EAAEC,OAAOH,QACtCI,YAAY,UAEd,uBACEL,KAAK,WACLC,MAAON,EACPO,SAAU,SAAAC,GAAC,OAAIP,EAAiBO,EAAEC,OAAOH,QACzCI,YAAY,aAEd,wBAAQC,QA3BZ,WAIA,IAAqBlC,EAAOC,EAAPD,EAHPqB,EAGcpB,EAHFsB,EAIxBG,EAAQS,MAAMnC,EAAOC,GACpBmC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJd,EAASc,EAAKzB,OACdY,EAAQD,SAASc,EAAKzB,WAkBtB,sB,oBChCS,SAAS0B,EAAT,GAA0D,IAAtBC,EAAqB,EAAhCC,UAAyBC,EAAO,6BAChEjB,EAAU,IAAIC,EACpB,OACE,cAAC,IAAD,2BAAWgB,GAAX,IAAiBC,OAAS,SAAAC,GAAK,OAC7BnB,EAAQb,WAAa,cAAC4B,EAAD,eAAeI,IAClC,cAAC,IAAD,CAAUC,GAAG,eCPN,SAASC,IACtB,OACE,uDCFW,SAASC,IACtB,OACE,8EC2CWC,MArCf,WAgBE,OACE,gCACE,+BACE,6BAAI,cAAC,IAAD,CAAMH,GAAG,SAAT,0BACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,WAAT,4BACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,OAAT,2BAEN,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,KAAK,SAASR,UAAWvB,IAChC,cAACqB,EAAD,CAAeU,KAAK,WAAWR,UAAWK,IAE1C,cAAC,IAAD,CAAOG,KAAK,OAAOR,UAAWM,IAC9B,cAAC,IAAD,CAAON,UAAWM,WC1BXG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASf,OACP,cAAC,IAAMgB,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.04b7aad4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","const ROOT_URL = \"https://frebi.willandskill.eu/\"\nconst API_URL = `${ROOT_URL}api/v1/`\nconst AUTH_URL = `${ROOT_URL}auth/`\nconst LOGIN_URL = `${ROOT_URL}api-token-auth/`\n\nexport default class {\n\n  login(email, password) {\n    const payload = {\n      email, password\n    }\n    return fetch(LOGIN_URL, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n      headers: this.getPublicHeaders()\n    })\n  }\n\n  getMe() {\n    const url = `${API_URL}me`\n    return fetch(url, {\n      headers: this.getPrivateHeaders()\n    })\n  }\n\n  getCustomerList() {\n    const url = `${API_URL}customers`\n    return fetch(url, {\n      headers: this.getPrivateHeaders()\n    })\n  }\n\n  getPublicHeaders() {\n    return {\n      \"Content-Type\": \"application/json\"\n    }\n  }\n\n  getPrivateHeaders() {\n    return {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${this.getToken()}`\n    }\n  }\n\n  setToken(token) {\n    localStorage.setItem(\"JWT_APP\", token)\n  }\n\n  getToken() {\n    return localStorage.getItem(\"JWT_APP\")\n  }\n\n  deleteToken()Â {\n    localStorage.removeItem(\"JWT_APP\")\n  }\n}","import React, {useState} from 'react'\nimport UserKit from '../data/UserKit'\n\nexport default function LoginPage() {\n  const [emailInput, setEmailInput] = useState(\"webb19@willandskill.se\")\n  const [passwordInput, setPasswordInput] = useState(\"javascriptoramverk\")\n  const [token, setToken] = useState(null)\n  \n  const userKit = new UserKit()\n  function handleOnClick() {\n    handleLogin(emailInput, passwordInput)\n  }\n\n  function handleLogin(email, password) {\n    userKit.login(email, password)\n    .then(res => res.json())\n    .then(data => {\n      setToken(data.token)\n      userKit.setToken(data.token)\n    })\n  }\n  return (\n    <div>\n      <h1>JWT</h1>\n      <input \n        type=\"text\" \n        value={emailInput} \n        onChange={e => setEmailInput(e.target.value)}\n        placeholder=\"Email\"\n      />\n      <input \n        type=\"password\" \n        value={passwordInput}\n        onChange={e => setPasswordInput(e.target.value)}\n        placeholder=\"Password\"\n      />\n      <button onClick={handleOnClick}>Login</button>\n    </div>\n  )\n}\n","import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport UserKit from '../data/UserKit'\n\nexport default function PrivateRouter({ component: Component, ...rest}) {\n  const userKit = new UserKit()\n  return (\n    <Route {...rest} render={ props => (\n      userKit.getToken() ? <Component {...props} />\n      : <Redirect to='/login' />\n    )} />\n  )\n}","import React from 'react'\n\nexport default function PrivatePage() {\n  return (\n    <div>\n      This page is private\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function NotFound() {\n  return (\n    <div>\n      The page you are looking for does not exist\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport UserKit from './data/UserKit';\nimport { Switch, Route, Link } from 'react-router-dom'\nimport LoginPage from './pages/LoginPage';\nimport PrivateRouter from './components/PrivateRouter';\nimport PrivatePage from './pages/PrivatePage';\nimport NotFound from './pages/NotFound';\n\nfunction App() {\n\n  // function fetchMe() {\n  //   userKit.getMe()\n  //   .then(res=>res.json())\n  //   .then(data => console.log(data))\n  // }\n\n  // function fetchCustomerList() {\n  //   userKit.getCustomerList()\n  //   .then(res => res.json())\n  //   .then(data => {\n  //     console.log(data)\n  //   })\n  // }\n\n  return (\n    <div>\n      <ul>\n        <li><Link to=\"/login\">Login Page</Link></li>\n        <li><Link to=\"/private\">Private Page</Link></li>\n        <li><Link to=\"/404\">404 Page</Link></li>\n      </ul>\n      <Switch>\n        <Route path=\"/login\" component={LoginPage} />\n        <PrivateRouter path=\"/private\" component={PrivatePage} />\n        \n        <Route path=\"/404\" component={NotFound} />\n        <Route component={NotFound} />\n      </Switch>\n\n      {/* {token && <button onClick={fetchMe}> Fetch Me </button> }\n      {token && <button onClick={fetchCustomerList}> Get Customers </button> } */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}